apiVersion: v1
kind: Secret
metadata:
  name: postgres-credentials
  namespace: quantumalpha
  labels:
    app: postgres
    compliance.sox: "true"
    compliance.pci-dss: "true"
  annotations:
    kubernetes.io/description: "PostgreSQL database credentials"
    security.level: "high"
type: Opaque
data:
  # Base64 encoded values - replace with actual encoded secrets in production
  username: cG9zdGdyZXM=  # postgres
  password: Y2hhbmdlbWVfaW5fcHJvZHVjdGlvbg==  # changeme_in_production
  database: cXVhbnR1bWFscGhh  # quantumalpha
---
apiVersion: v1
kind: Secret
metadata:
  name: influxdb-credentials
  namespace: quantumalpha
  labels:
    app: influxdb
    compliance.sox: "true"
  annotations:
    kubernetes.io/description: "InfluxDB credentials and tokens"
    security.level: "high"
type: Opaque
data:
  # Base64 encoded values - replace with actual encoded secrets in production
  username: YWRtaW4=  # admin
  password: Y2hhbmdlbWVfaW5fcHJvZHVjdGlvbg==  # changeme_in_production
  token: Y2hhbmdlbWVfaW5mbHV4ZGJfdG9rZW5faW5fcHJvZHVjdGlvbg==  # changeme_influxdb_token_in_production
  org: cXVhbnR1bWFscGhh  # quantumalpha
  bucket: bWFya2V0X2RhdGE=  # market_data
---
apiVersion: v1
kind: Secret
metadata:
  name: redis-credentials
  namespace: quantumalpha
  labels:
    app: redis
    compliance.pci-dss: "true"
  annotations:
    kubernetes.io/description: "Redis authentication credentials"
    security.level: "high"
type: Opaque
data:
  # Base64 encoded values - replace with actual encoded secrets in production
  password: Y2hhbmdlbWVfcmVkaXNfcGFzc3dvcmRfaW5fcHJvZHVjdGlvbg==  # changeme_redis_password_in_production
---
apiVersion: v1
kind: Secret
metadata:
  name: kafka-credentials
  namespace: quantumalpha
  labels:
    app: kafka
    compliance.sox: "true"
  annotations:
    kubernetes.io/description: "Kafka SASL credentials"
    security.level: "high"
type: Opaque
data:
  # Base64 encoded values - replace with actual encoded secrets in production
  username: cXVhbnR1bWFscGhh  # quantumalpha
  password: Y2hhbmdlbWVfa2Fma2FfcGFzc3dvcmRfaW5fcHJvZHVjdGlvbg==  # changeme_kafka_password_in_production
---
apiVersion: v1
kind: Secret
metadata:
  name: tls-certificates
  namespace: quantumalpha
  labels:
    app: nginx
    compliance.pci-dss: "true"
  annotations:
    kubernetes.io/description: "TLS certificates for HTTPS"
    security.level: "high"
type: kubernetes.io/tls
data:
  # Replace with actual certificate and key in production
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0t  # placeholder
  tls.key: LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0t  # placeholder
---
apiVersion: v1
kind: Secret
metadata:
  name: api-keys
  namespace: quantumalpha
  labels:
    app: quantumalpha
    compliance.glba: "true"
  annotations:
    kubernetes.io/description: "API keys and external service credentials"
    security.level: "high"
type: Opaque
data:
  # Base64 encoded values - replace with actual encoded secrets in production
  jwt-secret: Y2hhbmdlbWVfand0X3NlY3JldF9pbl9wcm9kdWN0aW9u  # changeme_jwt_secret_in_production
  encryption-key: Y2hhbmdlbWVfZW5jcnlwdGlvbl9rZXlfaW5fcHJvZHVjdGlvbg==  # changeme_encryption_key_in_production
  api-key: Y2hhbmdlbWVfYXBpX2tleV9pbl9wcm9kdWN0aW9u  # changeme_api_key_in_production

