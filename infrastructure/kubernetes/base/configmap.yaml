apiVersion: v1
kind: ConfigMap
metadata:
  name: quantumalpha-config
  namespace: quantumalpha
  labels:
    app: quantumalpha
    compliance.sox: "true"
    compliance.pci-dss: "true"
    compliance.glba: "true"
  annotations:
    kubernetes.io/description: "Application configuration for QuantumAlpha"
data:
  # Database configuration
  DB_HOST: "postgres"
  DB_PORT: "5432"
  DB_NAME: "quantumalpha"
  DB_SSL_MODE: "require"
  DB_MAX_CONNECTIONS: "20"
  DB_CONNECTION_TIMEOUT: "30"
  
  # InfluxDB configuration
  INFLUXDB_URL: "https://influxdb:8086"
  INFLUXDB_ORG: "quantumalpha"
  INFLUXDB_BUCKET: "market_data"
  INFLUXDB_TIMEOUT: "30s"
  
  # Redis configuration
  REDIS_HOST: "redis"
  REDIS_PORT: "6379"
  REDIS_SSL: "true"
  REDIS_TIMEOUT: "5s"
  REDIS_MAX_CONNECTIONS: "10"
  
  # Kafka configuration
  KAFKA_BOOTSTRAP_SERVERS: "kafka:9092"
  KAFKA_SECURITY_PROTOCOL: "SASL_SSL"
  KAFKA_SASL_MECHANISM: "PLAIN"
  KAFKA_SSL_CHECK_HOSTNAME: "true"
  KAFKA_CONSUMER_GROUP: "quantumalpha"
  KAFKA_AUTO_OFFSET_RESET: "earliest"
  KAFKA_ENABLE_AUTO_COMMIT: "false"
  
  # Application configuration
  LOG_LEVEL: "INFO"
  LOG_FORMAT: "json"
  ENVIRONMENT: "production"
  DEBUG: "false"
  
  # Security configuration
  CORS_ORIGINS: "https://quantumalpha.com,https://app.quantumalpha.com"
  CORS_METHODS: "GET,POST,PUT,DELETE,OPTIONS"
  CORS_HEADERS: "Content-Type,Authorization,X-Requested-With"
  CORS_CREDENTIALS: "true"
  
  # Session configuration
  SESSION_TIMEOUT: "3600"
  SESSION_SECURE: "true"
  SESSION_HTTP_ONLY: "true"
  SESSION_SAME_SITE: "strict"
  
  # Rate limiting
  RATE_LIMIT_REQUESTS: "100"
  RATE_LIMIT_WINDOW: "60"
  RATE_LIMIT_BURST: "20"
  
  # Monitoring configuration
  METRICS_ENABLED: "true"
  METRICS_PORT: "9090"
  HEALTH_CHECK_INTERVAL: "30"
  
  # Compliance configuration
  AUDIT_ENABLED: "true"
  AUDIT_LOG_LEVEL: "INFO"
  AUDIT_RETENTION_DAYS: "2555"  # 7 years for SOX compliance
  
  # Encryption configuration
  ENCRYPTION_ALGORITHM: "AES-256-GCM"
  HASH_ALGORITHM: "SHA-256"
  
  # Backup configuration
  BACKUP_ENABLED: "true"
  BACKUP_SCHEDULE: "0 2 * * *"  # Daily at 2 AM
  BACKUP_RETENTION_DAYS: "90"
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-config
  namespace: quantumalpha
  labels:
    app: nginx
    compliance.pci-dss: "true"
  annotations:
    kubernetes.io/description: "Nginx configuration for secure reverse proxy"
data:
  nginx.conf: |
    user nginx;
    worker_processes auto;
    error_log /var/log/nginx/error.log warn;
    pid /var/run/nginx.pid;

    events {
        worker_connections 1024;
        use epoll;
        multi_accept on;
    }

    http {
        include /etc/nginx/mime.types;
        default_type application/octet-stream;

        # Security headers
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header Referrer-Policy "strict-origin-when-cross-origin" always;
        add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; font-src 'self' data:; connect-src 'self' wss:; frame-ancestors 'self';" always;
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;

        # Hide nginx version
        server_tokens off;

        # Logging
        log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                        '$status $body_bytes_sent "$http_referer" '
                        '"$http_user_agent" "$http_x_forwarded_for" '
                        'rt=$request_time uct="$upstream_connect_time" '
                        'uht="$upstream_header_time" urt="$upstream_response_time"';

        access_log /var/log/nginx/access.log main;

        # Performance
        sendfile on;
        tcp_nopush on;
        tcp_nodelay on;
        keepalive_timeout 65;
        types_hash_max_size 2048;
        client_max_body_size 16M;

        # Gzip
        gzip on;
        gzip_vary on;
        gzip_min_length 1024;
        gzip_proxied any;
        gzip_comp_level 6;
        gzip_types text/plain text/css text/xml text/javascript application/json application/javascript application/xml+rss application/atom+xml image/svg+xml;

        # Rate limiting
        limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
        limit_req_zone $binary_remote_addr zone=login:10m rate=1r/s;

        # SSL
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384;
        ssl_prefer_server_ciphers off;
        ssl_session_cache shared:SSL:10m;
        ssl_session_timeout 10m;
        ssl_session_tickets off;

        include /etc/nginx/conf.d/*.conf;
    }
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: security-policies
  namespace: quantumalpha
  labels:
    app: quantumalpha
    compliance.sox: "true"
    compliance.pci-dss: "true"
    compliance.glba: "true"
  annotations:
    kubernetes.io/description: "Security policies and compliance configurations"
data:
  password-policy.json: |
    {
      "minLength": 12,
      "requireUppercase": true,
      "requireLowercase": true,
      "requireNumbers": true,
      "requireSpecialChars": true,
      "maxAge": 90,
      "historyCount": 12,
      "lockoutThreshold": 5,
      "lockoutDuration": 900
    }
  
  compliance-settings.json: |
    {
      "sox": {
        "auditRetentionYears": 7,
        "requireDualApproval": true,
        "encryptionRequired": true,
        "accessLoggingRequired": true
      },
      "pciDss": {
        "encryptionInTransit": true,
        "encryptionAtRest": true,
        "accessControlRequired": true,
        "vulnerabilityScanningRequired": true,
        "networkSegmentationRequired": true
      },
      "glba": {
        "dataProtectionRequired": true,
        "privacyNoticeRequired": true,
        "optOutMechanismRequired": true,
        "safeguardsRuleCompliance": true
      }
    }
  
  security-headers.json: |
    {
      "X-Frame-Options": "SAMEORIGIN",
      "X-Content-Type-Options": "nosniff",
      "X-XSS-Protection": "1; mode=block",
      "Strict-Transport-Security": "max-age=31536000; includeSubDomains; preload",
      "Content-Security-Policy": "default-src 'self'; script-src 'self' 'unsafe-inline'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; font-src 'self' data:; connect-src 'self' wss:; frame-ancestors 'self';",
      "Referrer-Policy": "strict-origin-when-cross-origin"
    }

