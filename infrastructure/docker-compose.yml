version: '3'

services:
  postgres:
    image: postgres:14
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: quantumalpha
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"

  influxdb:
    image: influxdb:2.0
    environment:
      - DOCKER_INFLUXDB_INIT_MODE=setup
      - DOCKER_INFLUXDB_INIT_USERNAME=admin
      - DOCKER_INFLUXDB_INIT_PASSWORD=adminpassword
      - DOCKER_INFLUXDB_INIT_ORG=quantumalpha
      - DOCKER_INFLUXDB_INIT_BUCKET=market_data
    volumes:
      - influxdb_data:/var/lib/influxdb2
    ports:
      - "8086:8086"

  redis:
    image: redis:6
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data

  kafka:
    image: confluentinc/cp-kafka:7.0.0
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  zookeeper:
    image: confluentinc/cp-zookeeper:7.0.0
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  data-service:
    build:
      context: ./backend/data-service
    depends_on:
      - postgres
      - influxdb
      - kafka
    environment:
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USERNAME=postgres
      - DB_PASSWORD=postgres
      - DB_NAME=quantumalpha
      - INFLUXDB_URL=http://influxdb:8086
      - KAFKA_BOOTSTRAP_SERVERS=kafka:29092
    ports:
      - "8081:8080"

  ai-engine:
    build:
      context: ./backend/ai-engine
    depends_on:
      - data-service
      - redis
    environment:
      - DATA_SERVICE_URL=http://data-service:8080
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    ports:
      - "8082:8080"

  risk-service:
    build:
      context: ./backend/risk-service
    depends_on:
      - postgres
      - ai-engine
    environment:
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USERNAME=postgres
      - DB_PASSWORD=postgres
      - DB_NAME=quantumalpha
      - AI_ENGINE_URL=http://ai-engine:8080
    ports:
      - "8083:8080"

  execution-service:
    build:
      context: ./backend/execution-service
    depends_on:
      - risk-service
      - kafka
    environment:
      - RISK_SERVICE_URL=http://risk-service:8080
      - KAFKA_BOOTSTRAP_SERVERS=kafka:29092
    ports:
      - "8084:8080"

  web-frontend:
    build:
      context: ./web-frontend
    ports:
      - "3000:80"
    depends_on:
      - data-service
      - ai-engine
      - risk-service
      - execution-service

volumes:
  postgres_data:
  influxdb_data:
  redis_data:
